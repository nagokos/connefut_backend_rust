name: Rust

on: [push]

env:
  RUSTC_FORCE_INCREMENTAL: 1
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
  SLACK_CHANNEL: actions_backend_rust
  SLACK_ICON: https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2022-01-03/2916535299873_48.png
  SLACK_USERNAME: Github Actions

jobs:
  build_cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: build 
        run: cargo build
  install_toolchain:
    runs-on: ubuntu-latest
    needs: [build_cache]
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          conponents: clippy, rustfmt
  lint:
    runs-on: ubuntu-latest
    needs: [install_toolchain]
    steps:
      - uses: actions/checkout@v3
      - name: rust list
        run: |
          cargo fmt --all -- --check
          cargo clippy -- -D warnings
  cargo_deny:
    runs-on: ubuntu-latest
    needs: [build_cache]
    steps:
    - uses: actions/checkout@v2
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        log-level: warn
        command: check
        arguments: --all-features
        command-arguments: ""
        credentials: https://${{ secrets.GITHUB_USER }}:${{ secrets.GITHUB_PAT }}@github.com
  security_audit:
    runs-on: ubuntu-latest
    needs: [build_cache]
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  install_check_tools:
    runs-on: ubuntu-latest
    needs: [build_cache]
    steps:
      - uses: actions/checkout@v3
      - name: install cargo check tools 
        run: |
          cargo install --locked cargo-outdated
          cargo install cargo-udeps --locked
          rustup install nightly
          cargo install --locked cargo-pants
  check:
    runs-on: ubuntu-latest
    needs: [install_check_tools]
    steps:
      - uses: actions/checkout@v3
      - name: check rust
        run: |
          cargo outdated --exit-code 1
          cargo +nightly udeps
          cargo pants          
  notification_success:
    if: success()
    runs-on: ubuntu-latest
    needs: [check, lint, security_audit, cargo_deny]
    steps:
    - name: check out
      uses: actions/checkout@v3
    - name: success
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_COLOR: good
        SLACK_MESSAGE: Success in all workflows!!
        SLACK_TITLE: Message
  notification_failure:
    if: failure()
    runs-on: ubuntu-latest
    needs: [check, lint, security_audit, cargo_deny]
    steps:
    - name: check out
      uses: actions/checkout@v3
    - name: failure
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_COLOR: danger
        SLACK_MESSAGE: Workflow Failure...
        SLACK_TITLE: Message
